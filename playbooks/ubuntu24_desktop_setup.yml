---
- name: Setup Ubuntu 24 Desktop
  hosts: localhost
  become: yes
  vars:
    username: "{{ ansible_user_id }}"
    home: "/home/{{ username }}"
    node_version: "20.15.1"
    python_version: "3.12.4"

  tasks:
    - name: Update and upgrade apt packages
      apt:
        upgrade: dist
        update_cache: yes

    - name: Install essential packages
      apt:
        pkg:
          - build-essential
          - git
          - curl
          - wget
          - vim
          - zsh
          - tmux
          - jq
          - unzip
          - software-properties-common
          - apt-transport-https
          - gnupg

    - name: Install Docker
      block:
        - name: Add Docker GPG apt Key
          apt_key:
            url: https://download.docker.com/linux/ubuntu/gpg
            state: present

        - name: Add Docker Repository
          apt_repository:
            repo: deb https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable
            state: present

        - name: Install Docker
          apt:
            pkg:
              - docker-ce
              - docker-ce-cli
              - containerd.io
              - docker-compose-plugin

        - name: Add user to docker group
          user:
            name: "{{ username }}"
            groups: docker
            append: yes

    - name: Install snap packages (strict mode)
      snap:
        name:
          - code
          - libreoffice
          - evince
          - discord
          - telegram-desktop
          - vlc
          - obs-studio
          - termius-app
          - postman
          - bitwarden
          - pinta
          - brave
        state: present

    - name: Install snap packages (classic mode)
      snap:
        name: "{{ item }}"
        classic: yes
        state: present
      loop:
        - intellij-idea-ultimate
        - datagrip
        - phpstorm
        - webstorm
        - pycharm-professional
        - kubectl
        - zaproxy

    - name: Add Google Chrome repository
      apt_repository:
        repo: deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main
        state: present
        filename: google-chrome

    - name: Add Google Chrome GPG key
      apt_key:
        url: https://dl.google.com/linux/linux_signing_key.pub
        state: present

    - name: Install Google Chrome
      apt:
        name: google-chrome-stable
        state: present
        update_cache: yes

    - name: Install Thunderbird
      apt:
        name: thunderbird
        state: present

    - name: Install Firefox
      apt:
        name: firefox
        state: present

    - name: Install OpenVPN3
      block:
        - name: Add OpenVPN3 GPG key
          apt_key:
            url: https://swupdate.openvpn.net/repos/openvpn-repo-pkg-key.pub
            state: present
            keyring: /etc/apt/keyrings/openvpn.asc

        - name: Add OpenVPN3 Repository
          apt_repository:
            repo: deb [signed-by=/etc/apt/keyrings/openvpn.asc] https://packages.openvpn.net/openvpn3/debian {{ ansible_distribution_release }} main
            state: present
            filename: openvpn-packages

        - name: Update apt cache
          apt:
            update_cache: yes

        - name: Install OpenVPN3
          apt:
            name: openvpn3
            state: present

    - name: Install Oh My Zsh
      become_user: "{{ username }}"
      shell: sh -c "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
      args:
        creates: "{{ home }}/.oh-my-zsh"

    - name: Set Zsh as default shell
      user:
        name: "{{ username }}"
        shell: /bin/zsh

    - name: Configure UFW
      ufw:
        rule: allow
        port: '22'
        proto: tcp

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny

    - name: Add Zoom GPG key
      apt_key:
        url: https://zoom.us/linux/download/pubkey
        state: present

    - name: Add Zoom repository
      apt_repository:
        repo: deb [arch=amd64] https://zoom.us/linux/download/ubuntu/ {{ ansible_distribution_release }} stable
        state: present
        filename: zoom

    - name: Install Zoom
      apt:
        name: zoom
        state: present
        update_cache: yes

    - name: Install Nmap
      apt:
        name: nmap
        state: present

    - name: Install pyenv
      become_user: "{{ username }}"
      git:
        repo: 'https://github.com/pyenv/pyenv.git'
        dest: '{{ home }}/.pyenv'
        version: master

    - name: Set up pyenv in .zshrc
      lineinfile:
        dest: "{{ home }}/.zshrc"
        line: "{{ item }}"
        create: yes
      with_items:
        - 'export PYENV_ROOT="$HOME/.pyenv"'
        - 'command -v pyenv >/dev/null || export PATH="$PYENV_ROOT/bin:$PATH"'
        - 'eval "$(pyenv init -)"'
      become_user: "{{ username }}"

    - name: Install Python with pyenv
      become_user: "{{ username }}"
      shell: |
        pyenv install {{ python_version }}
        pyenv global {{ python_version }}
      args:
        executable: /bin/zsh

    - name: Install nvm
      become_user: "{{ username }}"
      shell: >
        curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.39.7/install.sh | bash
      args:
        creates: "{{ home }}/.nvm/nvm.sh"

    - name: Set up nvm in .zshrc and .bashrc
      become_user: "{{ username }}"
      lineinfile:
        dest: "{{ item }}"
        line: "{{ line_item }}"
        create: yes
      with_nested:
        - ["{{ home }}/.zshrc", "{{ home }}/.bashrc"]
        - [
            'export NVM_DIR="$HOME/.nvm"',
            '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"',
            '[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"'
          ]
      loop_control:
        loop_var: line_item

    - name: Install Node.js with nvm
      become_user: "{{ username }}"
      shell: |
        export NVM_DIR="{{ home }}/.nvm"
        [ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
        nvm install {{ node_version }}
        nvm use {{ node_version }}
      args:
        executable: /bin/zsh
      environment:
        HOME: "{{ home }}"

  handlers:
    - name: Restart Docker
      service:
        name: docker
        state: restarted

    - name: Reload shell
      shell: source {{ home }}/.zshrc
      args:
        executable: /bin/zsh
